[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "dash"
dynamic = ["version", "dependencies", "optional-dependencies"]
authors = [
    {name = "Chris Parmer", email = "chris@plotly.com"},
]
description = "A Python framework for building reactive web-apps. Developed by Plotly."
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Dash",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database :: Front-Ends",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Widget Sets",
]

[project.urls]
Homepage = "https://plotly.com/dash"
Documentation = "https://dash.plotly.com"
Source = "https://github.com/plotly/dash"
"Issue Tracker" = "https://github.com/plotly/dash/issues"

[project.scripts]
dash-generate-components = "dash.development.component_generator:cli"
renderer = "dash.development.build_process:renderer"
dash-update-components = "dash.development.update_components:cli"

[project.entry-points.pytest11]
dash = "dash.testing.plugin"

[tool.hatch.version]
path = "dash/version.py"

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements/install.txt"]

[tool.hatch.metadata.hooks.requirements_txt.optional-dependencies]
async = ["requirements/async.txt"]
ci = ["requirements/ci.txt"]
dev = ["requirements/dev.txt"]
testing = ["requirements/testing.txt"]
celery = ["requirements/celery.txt"]
diskcache = ["requirements/diskcache.txt"]
compress = ["requirements/compress.txt"]
build = ["requirements/build.txt"]

[tool.hatch.build]
ignore-vcs = true
include = [
    "dash/",
    "requirements/",
    "README.md",
    "LICENSE", 
    "MANIFEST.in",
    "pyproject.toml",
    "setup.py",
]
exclude = [
    "tests/",
    "components/",
    "@plotly/",
    "dash/dash-renderer/node_modules",
    "dash/dash-renderer/src",
    "dash/dash-renderer/tests",
    "dash/dash-renderer/lib",
    "dash/dash-renderer/config",
    "dash/dash-renderer/babel.config.js",
    "dash/dash-renderer/.eslintrc.js",
    "dash/dash-renderer/.eslintignore",
    "dash/dash-renderer/karma.conf.js",
    "dash/dash-renderer/index.html",
    "dash/dash-renderer/init.template",
    "dash/dash-renderer/digest.json",
    "dash/dash-renderer/package.json",
    "dash/dash-renderer/package-lock.json",
    "dash/dash-renderer/renderer-test.sh",
    "dash/dash-renderer/setup.py",
    "dash/dash-renderer/tsconfig.json",
    "dash/dash-renderer/tslint.json",
    "dash/dash-renderer/@Types",
    "dash/dash-renderer/webpack.base.config.js",
    "dash/dash-renderer/webpack.config.js",
    "dash/dash-renderer/webpack.test.config.js",
    "dash/dash-renderer/MANIFEST.in",
    "dash/**/node_modules",
]


[tool.hatch.build.targets.wheel]
packages = ["dash"]

[tool.hatch.build.targets.sdist]
packages = ["dash"]

[tool.hatch.build.targets.wheel.shared-data]
"dash/nbextension/main.js" = "share/jupyter/nbextensions/dash/main.js"
"dash/nbextension/dash.json" = "etc/jupyter/nbconfig/notebook.d/dash.json"
"dash/labextension/dist/dash-jupyterlab.tgz" = "share/jupyter/lab/extensions/dash-jupyterlab.tgz"